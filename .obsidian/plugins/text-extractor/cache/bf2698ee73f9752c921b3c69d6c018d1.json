{"path":"_aula_virtual/SJK005/LAB1.pdf","text":"Application development for Cloud Computing SJK005 – Cloud computing University Master's Degree in Intelligent Systems University Jaume I Competences and learning outcomes 1. To install the tools needed for cloud computing application development. 2. To develop RESTful APIs using Quarkus. 3. Testing the developed RESTfu APIs. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 2 Contents 1. Introduction. 2. Tools. 3. Microservices with Quarkus. 4. Summary. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 3 Introduction In this chapter, first, we are going to install all tools needed for developing microservices using Java. Second, we are going to create our first microservice using Quarkus. Afterword, we were ready for packaging our applications as containers. The better way to minimize headaches is to your Linux. I am using Ubuntu, but it is up to you to choose a linux distribution. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 4 Tools Advice: There are a lot of tools available. Use those that better fit your (or your organization) development process. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 5 Tools GIT: This is a must, and an industrial standard for version control. As a perfect complement, we are using github (gitlab, bitbucket and other are perfect alternatives). You can find all example code for this subject in github. Git is present in most (all) linux distributions. $ apt install git (Debian distributions). $ git –version (To check the installed version). SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 6 Tools SDKMAN: This is the perfect tool for managing SDKs. You can use it instead of plain apt install (Debian). $ curl -s \"https://get.sdkman.io\" | bash $ source \"$HOME/.sdkman/bin/sdkman-init.sh\" $ sdk version (To check version). SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 7 Tools Maven: The reference tool for software project management. All our projects will be maven projects. $ apt install maven $ sdk install maven $ mvn - - version (To check version) SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 8 Tools OpenJDK: Java Development Tools for compiling and running Java applications. $ apt install openjdk-17-jdk (version 17 is an LTS version. 23 is coming). $ sdk install java $ javac - -version (To check jdk version) SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 9 Tools Quarkus CLI: The Command Line Interface for Quarkus. We will use it for creating, managing and developing our applications. $ sdk install quarkus $ quarkus version SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 10 Tools GraaVM: This tool is for creating native executables from java bytecodes. Check first: https://www.graalvm.org/downloads/# $ sdk install java 21.0.3-graal # coming soon Additional required libraries: $ sudo apt-get install build-essential libz-dev zlib1g-dev $ native-image --version SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 11 Tools IDE: You can use your favourite IDE. I am using IntelliJ In this course. But I love Neovim ;). SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 12 Tools Now we are ready to start coding!!! SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 13 Quarkus Quarkus is an awesome library (ecosystem) for creating RESTful applications for microservices to be deployed in the cloud using Java. Let's create our first app using the Quarkus CLI: $ quarkus create app es.uji.belfern.resources:first-app:0.0.1 Inspect the result $ quarkus dev Browse to http://localhost:8080 SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 14 Quarkus Let's take a look at the generated code. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 15 Quarkus For testing the API you can use some options: • Browser. • Curl. • IntelliJ. • Postman. (available in Ubuntu repositories). • Bruno. (available in Ubuntu repositories). SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 16 Quarkus Another great options for testing are: • Make use of the \"dev\" mode. • Make use of the OpenAPI standard. • Create your own tests and make use of continuous testing option in Quarkus. Let's see them in more detail. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 17 Quarkus If you are in \"dev\" mode, you can use available command in the console. Type \"h\" for help. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 18 Quarkus OpenAPI \"The OpenAPI Specification is a specification language for HTTP APIs that provides a standardized means to define your API to others.\" This was first introduced by Swagger. For including automatic generation of OpenAPI: $ quarkus extension add quarkus-smallrye-openapi Then, navigate to localhost:8080 and click \"VISIT THE DEV UI\". SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 19 Quarkus Now, let's see continuous testing in action Again, navigate to localhost:8080 and click \"VISIT THE DEV UI\". Click on \"Continuous Testing\" this time. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 20 Summary • You already installed all tools needed to develop microservices with Quarkus. • Quarkus is an awesome set of tools for developing microservices in Java. • You have practice to create your first microservice, how to start development mode, and how to translate your API definition into Java code. • You have seen some basic practices about testing. SJK005 - Cloud Computing. Masters Degree in Intelligent Systems. University Jaume I. Castellón (Spain) 21","libVersion":"0.3.2","langs":""}