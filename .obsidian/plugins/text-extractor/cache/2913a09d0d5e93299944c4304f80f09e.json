{"path":"_aula_virtual/SJK006/5. Descriptive Analysis.pdf","text":"Descriptive Analysis The multidimensional model SJK006 - Máster U. en Sistemas Inteligentes 1 We will learn ● The relation of strategic goals, indicators and facts ● To transform data to analysis facts ● To obtain analytical cubes from facts ● To apply OLAP with Python and Pandas 2 Reminder: DATA VALUE CHAINS 3 TRANSFORM SUMMARISE VISUALISE Descriptive Analysis LEARN PREDICT Predictive Analysis RECOMMEND DECIDE DATA DATA’ Prescriptive Analysis Reminder: Balanced Scorecard 4 Key Performance Indicators Key Result Indicators ACTIONS Predictions ORGANISATION‘S GOALS Recommendations DATA-DRIVEN ORGANIZATION Goals, indicators, facts 5 Reduce delays I1 Mean delay time (daily) Facts > 10d [2d, 10d] < 2d An indicator monitors the degree of achievement of a goal. It is expressed as a ratio, a percentage, a proportion, etc. It is preferably normalized. It is always TEMPORAL (to monitor its evolution) Qualitative values (traffic lights) are set by defining a series of reference values (thresholds). Visual tools: Control Panels 6 https://www.intrafocus.com/ Key Performance Indicator (KPI) - Definition of strategic measures - Definition of goals and brands - Continuous monitoring Visual tools: Dashboards 7 Multidimensional Analysis Process 8 DATA FACTS CUBESETLMDX Extract, Transform & Load OLAP OnLine Analytical Processing Data Value Chain for Descriptive Analysis a 1 a 2 a 3 a1 a4 a1 a5 Data is dispersed across multiple disparate sources a1 a4 a2 a3 a5 FACT TABLE Information: Summarised & Visual Data must be integrated around entities of interest (e.g., Products, Deliveries, etc.) DATA 9 FACTS = DIMENSIONES + MEASURES 10 Province Date Week Month Zip Year Crime Complaint Total Cost City Detail levels (Starnet Query) Relations between levels must be always functional dependencies (1:1) Type FACT TABLES 11 DIMENSIONES MEDIDASFACTS Complaint Type Zip City Prov. Date Cost Total theft T1 12003 Castellón CS 12/10/2019 1520 5 vandalism T2 12004 Castellón CS 12/10/2019 3400 1 assault T1 12005 Almassora CS 14/10/2019 12000 1 theft T1 12003 Castellón CS 12/10/2019 30 1 burglary T1 12023 Castellón CS 13/10/2019 105 3 DIMENSIONS MEASURES Dimensions compound the primary key of the table (all details) Aggregation? https://graphic-walker.kanaries.net/ CUBES: arranging facts into a multidimensional model 12 The multidimensional model is based on the data structure called CUBE . The cells of the cube are accessed by a series of dimensions which: ● must be orthogonal (non dependent) ● can have associated different levels of detail Each cube cell contains the observed measures for its dimension values. It works similar to a multidimensional dictionary: Sales['Castellón']['February']['PCs'] = {Total:23, Sum:45} cube dimensions measures Mesures A measure is a numerical function that can be evaluated in each cell of the cube. The measure value of a cell is computed by aggregating the cells contained in it. Types of mesure functions : ● Distributive : We can directly aggregate the sub-cells. count(), sum(), min(), max() ● Algebraic : we need to derive the measure combining distributive measures avg(), standard_deviation() ● Holistic: other measures that cannot be aggregated from partial results median(), mode() 1314 Castellón Valencia Alicante Zamora León Jan. Feb. Mar. Apr. May Jun. PCs Laptops ServersItem (type)Place (city level) Time (month) 9 10 2 8 13 15 10 0 20 12 5 0 34 23 32 12 Sales[‘Castellón’][‘Feb.’][‘PCs’] Measures: {Total, Sum} (only Total is shown) 15 Castellón Valencia Alicante Zamora León Jan. Feb. Mar. Apr. May Jun. PCs Laptops ServersItem (type) Time (month) Measures: {Total, Sum} (only Total is shown) 9 10 2 8 13 15 10 0 20 12 5 0 34 23 32 12 Sales[‘Castellón’][‘Feb.’][‘PCs’] Draw a star diagram for this example CV CLPlace (CC.AA.) 16 Zamora León Jan. Feb. Mar. Apr. May Jun. PCs Laptops ServersItem (type) Time (month) 11 18 67 50 47 12 Sales[‘CV’][‘Feb.’][‘PCs’] Exercise: Draw the starnet diagram for this example CV CLPlace (CC.AA.) Castellón Valencia Alicante ROLLUP Measures: {Total, Sum} agg. with sum (only total is shown) OnLine Analytical Processing (OLAP) OLAP defines the following basic operations on cubes: ● ROLL UP(Cube, Dim.) → Reduce details ● DRILL DOWN (Cube, Dim.) ● ROLL ACROSS (Cube, Dim.) ● DRILL ACROSS (Cube, Dim.) ● SLICE (Cube, Dim., Level) ● DICE (Cube, D1, L1, D2, L2, …) ● PIVOT(Cube, Rows, Columns) All operators return a new cube with some change: reduce details, augment details, change axis, etc. 17 These operations are applied interactively by using data visualization tools. TABLEAU & POWER BI It allows you to explore and define indicators, as well as to detect anomalies and interesting points for decision making. Test: https://graphic-walker.kanaries.net/ MDX: the OLAP query language 18 SELECT { [Measures].[total_sales]} ON COLUMNS { [Time].[Q1], [Time].[Q2]} ON ROWS FROM Sales WHERE ([Item].[PCs]) Dimension values and measures are called MEMBERS (e.g., [Time][Q1][Jan] is a member of the Time dim. at month level) Members are ordered and they can be accessed with special functions like FIRST, LAST, CHILD, etc. All measures are members of [Measures]. AXIS CUBE More filters Pandas and Cubes 19 # Filter data before pivoting (WHERE) # Add new columns (calculated members) pandas.pivot_table(data, values= [store_sales], index= [store_state], columns= [store_type], aggfunc='sum', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False, sort=True) # Perform calculated measures (profit, perc.) # Filter data on aggregated data # Concat cubes if necessary Small store CA WA 12340 15340 1997 Large Store 167 203 SELECT {[Store Type].[Store Type].MEMBERS} ON COLUMNS, {[Store].[Store State].MEMBERS} ON ROWS FROM [Sales] WHERE (Measures.[Store Sales], [Time].[Year].[1997]) OR ACTIVITIES 20 Learn MDX language from examples (chatGPT) Prompt 1. Explain the following MDX query for a non-expert user: SELECT { [Measures].[total_sales]} ON COLUMNS { [Time].[T1], [Time].[T2]} ON ROWS FROM Sales WHERE ([Item].[PCs]) Prompt 2. Can you draw an example of the result of the previous MDX query? Generate MDX queries from a schema and an analysis specification (chatGPT) Prompt. Given the following multidimensional cube Sales(Time.Quarter.{Q1,Q2,Q3,Q4}, Location.Country.State.{CA,NY,AR}, total_sales) build an MDX query for showing the quarter incremental changes (in percentage) of the total sales per state Implement MDX queries with Pandas over dataframes (see notebook)","libVersion":"0.3.2","langs":""}