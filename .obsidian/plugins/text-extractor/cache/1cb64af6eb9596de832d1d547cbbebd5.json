{"path":"_aula_virtual/SJK006/3. Big Data Architectures.pdf","text":"Big Data Architectures Implementing Data Value Chains at large scale SJK006 - Master in Intelligent Systems 1 Summary We are going to ● recap. Big Data concepts ● introduce a Use Case for BD architectures ● analyze the logic of BD architectures ● introduce the main ETLing concepts ● practice with a Use Case example 2 The 4 V’s of Big Data 34 Use Case Intelligent Transport ● Global view of the transport scenario in a city ● Gather data from all the perspectives ○ Sensor data ○ Citizen interactions ○ Transport Modalities ○ City’s Infrastructures ○ etc. 5 Smart Cities for Public Transportation CITIZENS TRANSPORTS BIG DATA (big picture) 6 interactions Data Chain Values DATA SOURCES BiciCas City Bus Geo Loc Shops Social networks Open Street Maps Open Data Real-time alerts and reporting DATA Processes Capacity Alerts Businesses Demand Mobility Incidents (plans) Visualizations and insights 7 Rent-a-bike datasets (PayNoPain) 8 benches bench_status benches_anchors bicycles bans users subscriptions payments loans putbacks incidents benches_messages benches_notifications anchors Datasets/tables 9 anchors(uuid, bench_uuid, number) bans(uuid, use_uuid, date_start, date_expire, date_created, reason) benches_anchors(bench_uuid, anchor_uuid, anchor_number, bicycle_number, date_created) benches(uuid, name, latitude, longitude, date_created) benches_notifications(uuid, bench_uuid, notification, priority, date_created) bench_messages(uuid, message, date_start, date_expire, date_created) bicycles(uuid, number, date_created, status) incidents(uuid, error_key, use_uuid, anchor_uuid, status, date_created, bike_uuid) loans(uuid, use_uuid, bicycle_uuid, anchor_uuid, date_created, type_access) putbacks(uuid, bicycle_uuid, anchor_uuid, date_created) users(change_uuid, uuid, document, name, surname, street, city, postcode, birthday, phone, email, gender, date_created, date_change, deleted) bench_status(bench_uuid, date_lastseen, ip, queue, version, number_loans) loan_historical (uuid, loan_uuid, use_uuid, bicycle_uuid, loan_anchor_uuid, loan_date_created, putback_uuid, putback_anchor_uuid, putback_date_created, type_access, app_loan) Exercise: data chain values 10 HISTORICAL Incidentes por demografía, geografía Rutas más frecuentadas + temporalidad Histórico de ocupación de bancadas con respecto a la demanda Simulación de movimiento de recursos (modelo generativo probabilistico) Estudiar el “estado” de calidad de las bancadas y las bicicletas (kms que lleva la bicicleta) Recorrido de una bicicleta. Popularidad de las bicicletas. Bicicletas con problemas técnicos (se devuelven en la misma bancada con un tiempo corto entre loan y putback). Mapa por código postal de demanda. STREAMING Incidentes: cálculo real de bicicletas operativas Situación actual + modelo predictivo de demanda -> movilidad de recursos Avisos dirigidos Modelo predictivo de posible “relleno” de bicicletas en bancadas vacías Recomendación de bancadas cercanas y tiempo previsto (localización del usuario) Alerta de bancada llena. IMPLEMENTING DATA VALUE CHAINS Big Data Architectures ● Data warehousing ● Data lakes ● Kappa architecture ● Lambda architecture 11 DATA WAREHOUSING ETQ: Extract, Transform & Query OLAP tools Corporate data Data Warehouse QETL* MDX Concealed data SQL External data Cubes Report USER REQUEST Concealed data Analytical Query Data Provisioning Data Modelling Querying Analysis Data Mart 12 Data Science DATA LAKES 13 ETL: Extract, Transform & Load OLAP toolsCorporate dataSQLExternal data Cubes Reports Data Science Concealed data Analysis Data setETL/Q Basic operations for capturing and transforming data An ETL is a workflow of transformations on source data, which is aimed at integrating and concealing data for analytical purposes 14 Improving the quality of data • Data Cleaning : – Detect and fix omitted or missing values – Remove noisy data (no relevant for analysis) – Detect incoherent data • Data integration : – Duplicate removal – Gathering data of the same entities – Homogenization of terms and keys • Data transformation : – Change of formats, scaling and normalization • Data reduction : – Selection of attributes and aggregation of data 15 ETL: Workflows of transformation operators Input RecordSet Operator Vassiliadis et al. Information Systems 30 (2005) RecordSet (exceptions) Parameters Input RecordSet Provider Consumer PK Cost Date PK Cost OUTPUT SCHEMA PK Cost YearLOG PK Cost Date 121 1221 01/02/15 … … … PK Cost Year 001 2001 2015 16 Some examples of operators σ a 1= v1,…, an= vn Row selection NN Not Null _REJ columnNon Null DM Bad format _REJ column dtypeData type conflicts Add new_col = valueAdd new column π a 1,…, an Project G groups, aggregations Group-by 17 Tools for ETLing: KNIME 18 σ avg_capital_gain > 0 Tools for ETLing: KNIME σ Sex=Male f Age=CAIMBinner(age, class) G age, occupation avg(capital_gain) 19 Census Data Male people with capital gain Schema? age discretisation group by age and occupation Exercise: Pandas for ETLing SELECTION DUPLICATE REMOVAL MISSING VALUES GROUP-BY JOIN DIFFERENCE (anti-join) UNION of recordsets PROJECT columns CONCAT columns SPLIT a column APPLY a function to a column (or several) DISTRIBUTION (reverse of join) (complete with Pandas methods) 20 Lambda Architecture (Streaming data) 21 Stream Data Batch layer Serving layer Speed layer Batch View Batch View raw data (text) Batch Process Stream Process Real-time view Real-time view QUERY QUERY Slow layer (NoSQL) Fast layer (streaming) Fusion at client side Serving layer • Use of “logs” (append-only files) to store data. • The “batch” layer of the Lambda architecture is removed. • Greatly simplifies code maintenance. • Great processing speed. Kappa Architecture 22 Stream Data Real-time layer Stream Process Real-time view Real-time view QUERY QUERY Lambda or Kappa? 23 TRANSFORM SUMMARISE VISUALISE Descriptive Analysis LEARN PREDICT Predictive Analysis RECOMMEND DECIDE DATA DATA’ Prescriptive Analysis","libVersion":"0.3.2","langs":""}